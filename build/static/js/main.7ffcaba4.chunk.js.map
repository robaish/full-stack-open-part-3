{"version":3,"sources":["services/personDB.js","components/PersonForm.js","components/Filter.js","components/PersonList.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newPerson","post","id","updatedPerson","put","delete","PersonForm","props","className","onSubmit","addPerson","for","value","nameValue","onChange","handleNameChange","numberValue","handleNumberChange","type","Filter","filterByName","PersonList","filteredPersons","map","person","name","number","onClick","removePerson","Notification","notification","state","message","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filterName","setFilterName","setNotification","useEffect","personDB","initialContacts","console","log","length","updatePerson","window","confirm","find","p","newInfo","createdPerson","setTimeout","catch","error","undefined","includes","filter","toLowerCase","event","target","preventDefault","some","concat","deleteId","deleteName","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7ffcaba4.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n}\n\nconst create = newPerson => {\n  const request = axios.post(baseUrl, newPerson);\n  return request.then(response => response.data);\n}\n\nconst update = (id, updatedPerson) => {\n  const request = axios.put(`${baseUrl}/${id}`, updatedPerson);\n  return request.then(response => response.data);\n}\n\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then(response => response.data);\n} \n\nexport default { getAll, create, update, remove }","import React from \"react\";\n\nconst PersonForm = (props) => {\n  return (\n    <form className=\"form\" onSubmit={props.addPerson}>\n      <div className=\"form-item\">\n        <label for=\"name\">Name:</label>\n        <input value={props.nameValue} onChange={props.handleNameChange} />\n      </div>\n      <div className=\"form-item\">\n        <label for=\"name\">Number:</label>\n        <input value={props.numberValue} onChange={props.handleNumberChange} />\n      </div>\n      <div className=\"form-button\">\n        <button className=\"btn--primary\" type=\"submit\">Add</button>\n      </div>\n    </form>\n  );\n}\n\nexport default PersonForm;","import React from \"react\";\n\nconst Filter = (props) => {\n  return (\n    <div className=\"filter\">\n      <h2>Type name to filter</h2>\n      <input onChange={props.filterByName} />\n    </div>\n  );\n\n}\n\nexport default Filter;","import React from \"react\";\n\nconst PersonList = (props) => {\n  return (\n    <ul className=\"contact-list\">\n      {props.filteredPersons.map(person => \n      <li className=\"contact-list-item\" key={person.id}>\n        {`${person.name} ${person.number} `}\n        <button className=\"btn--secondary\" value={person.id} onClick={props.removePerson}>Delete</button>\n      </li>\n      )}\n    </ul>\n  );\n}\n\nexport default PersonList;","import React from \"react\";\n\nconst Notification = ({ notification }) => {\n  if (notification.state === null) {\n    return null;\n  }\n  if(notification.state === 'success') {\n    return <div className=\"notification success\">{notification.message}</div>;\n  }\n  if(notification.state === 'danger') {\n    return <div className=\"notification danger\">{notification.message}</div>;\n  }\n}\n\nexport default Notification;","import React, { useState, useEffect } from 'react'\nimport personDB from './services/personDB';\nimport PersonForm from './components/PersonForm';\nimport Filter from './components/Filter';\nimport PersonList from './components/PersonList';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]);\n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n  const [ filterName, setFilterName ] = useState('');\n  const [ notification, setNotification ] = useState({state: null, message: ''});\n\n  // Get contacts from server\n  useEffect(() => {\n    personDB\n      .getAll()\n      .then(initialContacts => {\n        console.log('%c promise fulfilled, got contacts:', 'color: green;');\n        setPersons(initialContacts);\n      })\n  },[]);\n  console.log('render', persons.length, 'contacts');\n\n  // Add contact\n  const addPerson = event => {\n    event.preventDefault();\n    const person = {\n      name: newName,\n      number: newNumber, \n    }\n    \n    persons.some(p => p.name === newName)\n    ? updatePerson(newName, newNumber)\n    : personDB\n        .create(person)\n        .then(createdPerson => {\n          setPersons(persons.concat(createdPerson));\n          setNewName('');\n          setNewNumber('');\n          setNotification({state: 'success', message: `Added ${createdPerson.name} 👍`});\n          setTimeout(() => setNotification({state: null}), 5000);\n        })\n        .catch(error => {\n          setNotification({state: 'danger', message: `${error.response.data.error}`})\n          setTimeout(() => setNotification({state: null}), 5000)\n          setPersons(persons.filter(p => p.id !== person.id));\n        })  \n  }\n\n  // Update contact\n  const updatePerson = (newName, newNumber) => {\n    if (window.confirm(`${newName} is already added to phonebook. Replace the old number with a new one?`)) {\n      const person = persons.find(p => p.name === newName);\n      const newInfo = {...person, number: newNumber}\n\n      console.log(person.id, newInfo)\n      \n      personDB\n        .update(person.id, newInfo)\n        .then(createdPerson => {\n          if (createdPerson) {\n            setPersons(persons.map(p => {\n              return p.id !== person.id ? p : createdPerson;\n            }));\n          }\n          setNewName('');\n          setNewNumber('');\n          setNotification({state: 'success', message: `Updated ${createdPerson.name}'s info 👍`});\n          setTimeout(() => setNotification({state: null}), 5000);\n        })\n        .catch(error => {\n          if (error.response !== undefined && error.response.data.error.includes('Validation')) {\n            setNotification({state: 'danger', message: `${error.response.data.error}`})\n          } else {\n            // If user has been deleted in another browser:\n            setNotification({state: 'danger', message: `The information of ${newName} has already been deleted.`});\n            setPersons(persons.filter(p => p.id !== person.id));\n          }\n          setTimeout(() => setNotification({state: null}), 5000);\n        });\n    }\n  }\n\n  // Remove contact\n  const removePerson = event => {\n    event.preventDefault();\n    const deleteId = event.target.value;\n    const deleteName = persons.find(p => p.id === deleteId).name;\n    console.log(deleteId, persons);\n    \n    if (window.confirm(`Do you really want to remove ${deleteName}?`)) {\n    personDB\n      .remove(event.target.value)\n      .then(() => {\n        setPersons(persons.filter(p => p.id !== deleteId));\n        setNotification({state: 'success', message: `Deleted ${deleteName}`});\n        setTimeout(() => setNotification({state: null}), 5000);\n      })\n      .catch(error => {\n        console.log('Contact has already been removed.', error);\n        setNotification({state: 'danger', message: `The information of ${deleteName} has already been deleted.`});\n        setTimeout(() => setNotification({state: null}), 5000);\n        setPersons(persons.filter(p => p.id !== deleteId));\n      })\n    }\n  }\n  \n  // Filter phonebook\n  const filterByName = event => {\n    setFilterName(event.target.value.toLowerCase());\n  }\n  const filteredPersons = persons.filter(\n    person => person.name.toLowerCase().includes(filterName)\n  );\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <Notification className=\"notification-bar\" notification={notification} />\n      <div>\n        <h1>Phonebook</h1>\n      </div>\n      <div className=\"container\">\n        <Filter filterByName={filterByName} />\n        <h2>Add / update contacts</h2>\n        <PersonForm\n          handleNameChange={handleNameChange}\n          handleNumberChange={handleNumberChange}\n          addPerson={addPerson}\n          nameValue={newName}\n          numberValue={newNumber}\n        />\n        <h2>All contacts</h2>\n        <PersonList\n          filteredPersons={filteredPersons} \n          removePerson={removePerson}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}